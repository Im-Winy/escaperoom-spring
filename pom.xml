<?xml version="1.0" encoding="UTF-8"?>
<!-- Fichier de configuration Maven pour un projet Spring Boot -->
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<!-- Version du modèle POM -->
	<modelVersion>4.0.0</modelVersion>

	<!-- Définition du parent Spring Boot pour hériter des configurations par défaut -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.2</version>
		<relativePath/> <!-- Recherche le parent depuis le dépôt central -->
	</parent>

	<!-- Informations basiques sur le projet -->
	<groupId>com.escaperoom</groupId>
	<artifactId>escaperoom</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>escaperoom</name>
	<description>Application web escaperoom</description>
	<url/> <!-- URL du projet (peut être laissée vide) -->

	<!-- Informations sur la licence (vide pour l’instant) -->
	<licenses>
		<license/>
	</licenses>

	<!-- Informations sur les développeurs (vide pour l’instant) -->
	<developers>
		<developer/>
	</developers>

	<!-- Informations de gestion de code source (vide pour l’instant) -->
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>

	<!-- Propriétés du projet -->
	<properties>
		<java.version>17</java.version> <!-- Version Java utilisée -->
		<spring-cloud.version>2024.0.0</spring-cloud.version> <!-- Version de Spring Cloud -->
	</properties>

	<dependencies>
		<!-- Dépendance pour l’accès aux bases de données via JPA -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Dépendance pour développer des APIs REST et applications web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Dépendance pour la configuration centralisée avec Spring Cloud Config -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<!-- Base de données H2 en mémoire (utile pour le développement/test) -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Connecteur JDBC pour base de données MySQL -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Lombok pour réduire le code boilerplate (getters/setters, etc.) -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Outils de test Spring Boot (JUnit, Mockito, etc.) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Sécurité avec Spring Security (authentification et autorisation) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- Dépendance personnalisée externe (par exemple, un autre module ou service) -->
		<dependency>
			<groupId>com.parkauto.rest</groupId>
			<artifactId>parkauto1</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		
		<!-- Dépendance Spring Boot pour envoyer des e-mails via SMTP.
		Fournit la configuration automatique de JavaMailSender. -->
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

		<!-- Librairies pour la gestion des JWT (authentification avec JSON Web Tokens) -->
		<dependency>
		    <groupId>io.jsonwebtoken</groupId>
		    <artifactId>jjwt-api</artifactId>
		    <version>0.11.5</version>
		</dependency>

        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>0.11.5</version>
            <scope>runtime</scope>
       </dependency>

       <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId> <!-- Pour (dé)sérialiser JWT avec Jackson -->
            <version>0.11.5</version>
            <scope>runtime</scope>
      </dependency>
	</dependencies>

	<!-- Gestion centralisée des versions pour Spring Cloud -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- Configuration de la phase de build (compilation et packaging) -->
	<build>
		<plugins>
			<!-- Plugin Maven pour compiler le code Java avec gestion de Lombok -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<!-- Plugin pour packager et exécuter l'application Spring Boot -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<!-- Lombok exclu du packaging car utilisé uniquement à la compilation -->
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
